[{"C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\index.js":"1","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\reportWebVitals.js":"2","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\App.js":"3","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Form\\index.js":"4","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\main\\index.js":"5","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Practices\\Practice1\\Form\\index.js":"6","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Practices\\Practice1\\Form\\Tab\\index.js":"7","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\Practices\\Practice1\\index.js":"8","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Messages\\index.js":"9","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\Practices\\Practice2\\index.js":"10","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Practices\\Practice2\\Table\\index.js":"11","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\arrays\\index.js":"12","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Pagin\\index.js":"13","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\Practices\\Practice4\\index.js":"14","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Items\\index.js":"15","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\read_data\\index.js":"16","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\read_data\\profile.js":"17","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\read_data\\edit.js":"18","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\login\\index.js":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1409,"mtime":1614071748002,"results":"23","hashOfConfig":"21"},{"size":3098,"mtime":1612172044721,"results":"24","hashOfConfig":"21"},{"size":2548,"mtime":1612176240254,"results":"25","hashOfConfig":"21"},{"size":2450,"mtime":1609952970293,"results":"26","hashOfConfig":"21"},{"size":881,"mtime":1609952972945,"results":"27","hashOfConfig":"21"},{"size":1534,"mtime":1610362514661,"results":"28","hashOfConfig":"21"},{"size":603,"mtime":1610379997475,"results":"29","hashOfConfig":"21"},{"size":881,"mtime":1610381775860,"results":"30","hashOfConfig":"21"},{"size":3220,"mtime":1610381870112,"results":"31","hashOfConfig":"21"},{"size":4935,"mtime":1612201632898,"results":"32","hashOfConfig":"21"},{"size":792,"mtime":1611569386858,"results":"33","hashOfConfig":"21"},{"size":1673,"mtime":1611748252767,"results":"34","hashOfConfig":"21"},{"size":645,"mtime":1612176034461,"results":"35","hashOfConfig":"21"},{"size":1244,"mtime":1612783404448,"results":"36","hashOfConfig":"21"},{"size":1037,"mtime":1612783054806,"results":"37","hashOfConfig":"21"},{"size":2273,"mtime":1614078042854,"results":"38","hashOfConfig":"21"},{"size":2467,"mtime":1614077882820,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1m5z5ew",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\index.js",[],["88","89"],"C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\reportWebVitals.js",[],"C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\App.js",["90","91","92","93","94"],"import './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\nimport Main from './pages/main';\nimport Practice1 from './pages/Practices/Practice1';\nimport Practice2 from './pages/Practices/Practice2';\nimport ArrayPage from './pages/arrays';\nimport Practice4 from './pages/Practices/Practice4';\nimport ReadData from './pages/read_data';\nimport Profile from './pages/read_data/profile';\nimport EditProfile from './pages/read_data/edit';\n\nimport Login from './pages/login';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/arrays\">Arrays</Link>\n        </div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login />\n          </Route>\n          <Route exact path=\"/read\">\n            {/* <Main /> */}\n            <ReadData />\n          </Route>\n          {/* <Practice1 /> */}\n          {/* <Practice2 /> */}\n          <Route path=\"/arrays/\">\n            <ArrayPage />\n          </Route>\n          <Route path=\"/arrays/:id\">\n            <ArrayPage />\n          </Route>\n          <Route path=\"/profile/:id\">\n            <Profile />\n          </Route>\n          <Route path=\"/editprofile/:id\">\n            <EditProfile />\n          </Route>\n        </Switch>\n        {/* <Practice4 /> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Form\\index.js",["95"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    min-width:${props => props.width ? props.width : \"300px\"};\r\n    min-height:${props => props.width ? props.width : \"100px\"};\r\n    max-width:${props => props.width ? props.width : \"50%\"};\r\n    max-height:${props => props.width ? props.width : \"300px\"};\r\n    padding:10px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    border-radius:5px;\r\n\r\n    ${props => props.bgcolor && \"background-color:\" + props.bgcolor + \";\"};\r\n    & > span {\r\n        margin:5px;\r\n    }\r\n`;\r\n\r\nconst FormInput = styled.input`\r\n    min-height:25px;\r\n    padding:5px;\r\n`;\r\n\r\nconst FormButton = styled.button`\r\n    border-radius:5px;\r\n    min-height:25px;\r\n`;\r\n\r\nconst FormCheckbox = styled.input.attrs({ type: 'checkbox' })`\r\n\r\n`;\r\n\r\nvar timer = null;\r\nconst Form = ({ name, width, height, bgcolor, onFormComplete, onContainerSelect }) => {\r\n\r\n    const [username, setUserame] = useState(null);\r\n    const [pass, setPass] = useState(null);\r\n    const [msg, setMsg] = useState(null);\r\n    const [check1, setCheck1] = useState(false);\r\n    const [check2, setCheck2] = useState(false);\r\n    const [check3, setCheck3] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setCheck1(check3);\r\n        setCheck2(check3);\r\n    }, [check3]);\r\n\r\n    useEffect(()=>{\r\n        //alert(\"changed background\");\r\n    }, [bgcolor]);\r\n\r\n    // useEffect(()=>{\r\n    //     timer = setInterval(()=>{\r\n    //         console.log(\"time is running out\");\r\n    //     }, 1000)\r\n    //     return () => {\r\n    //         //this is death.\r\n    //         clearInterval(timer);\r\n    //     }\r\n    // }, );\r\n\r\n    return <Container onClick={() => {\r\n        onContainerSelect(name);\r\n    }} width={width} height={height} bgcolor={bgcolor}>\r\n        <FormInput type='text' placeholder='name' onChange={(e) => {\r\n            setUserame(e.target.value);\r\n        }} />\r\n        <FormInput type='password' placeholder='pass' onChange={(e) => {\r\n            setPass(e.target.value);\r\n        }} />\r\n                <FormInput type='text' placeholder='chat message' onChange={(e) => {\r\n            setMsg(e.target.value);\r\n        }} />\r\n        <span>\r\n            <FormCheckbox onChange={(e) => {\r\n                setCheck1(e.target.checked);\r\n            }} checked={check1} /> I agree to sell my life\r\n        </span>\r\n        <span>\r\n            <FormCheckbox onChange={(e) => {\r\n                setCheck2(e.target.checked);\r\n            }} checked={check2} /> I agree to sell my soul\r\n        </span>\r\n        <span>\r\n            <FormCheckbox onChange={(e) => {\r\n                setCheck3(e.target.checked);\r\n            }} /> I agree with all of the above\r\n        </span>\r\n        <FormButton onClick={() => {\r\n            onFormComplete(username, pass, msg, check1, check2, check3);\r\n        }}>Send Message</FormButton>\r\n    </Container>\r\n}\r\n\r\nForm.defaultProps = {\r\n    width: null,\r\n    height: null,\r\n    bgcolor: null,\r\n    onFormComplete: () => { },\r\n    onContainerSelect: () => { }\r\n\r\n}\r\n\r\nexport default Form;","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\main\\index.js",[],"C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Practices\\Practice1\\Form\\index.js",["96"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    position:relative;\r\n    max-width:400px;\r\n    min-height:330px;\r\n    display:flex;\r\n    justify-content:top;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    padding:20px 0px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    min-width:98%;\r\n    min-height:45px;\r\n    border:none;\r\n    background-color:#4285F4;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    font-size:16px;\r\n    font-weight:500;\r\n    color:white;\r\n    text-transform:uppercase;\r\n    cursor: pointer;\r\n    position:absolute;\r\n    bottom:0;\r\n    margin:1%;\r\n`;\r\n\r\nconst InputCont = styled.div`\r\n    min-width:98%;\r\n    min-height:100%;\r\n    margin:1%;\r\n    margin-bottom:15px;\r\n`;\r\n\r\nconst InputLabel = styled.div`\r\n    text-transform:uppercase;\r\n    color:#686868;\r\n    font-weight:500;\r\n    margin-bottom:5px;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n    min-width:100%;\r\n    min-height:45px;\r\n    background: #F2F4FB;\r\n    border-radius:5px;\r\n    border:none;\r\n`;\r\n\r\nconst InputDisplay = styled.div`\r\n    width:100%;\r\n    display:${props => props.display ? props.display : \"block\"};\r\n`;\r\n\r\nconst Form = ({ buttonText, display, onFormComplete }) => {\r\n\r\n    const [email, setEmail] = useState(null);\r\n    const [pass, setPass] = useState(null);\r\n\r\n    return <Container>\r\n        <InputCont>\r\n            <InputLabel>\r\n                Email\r\n        </InputLabel>\r\n            <InputField type='text' onChange={(e) => {\r\n                setEmail(e.target.value);\r\n            }} />\r\n        </InputCont>\r\n        <InputCont>\r\n            <InputLabel>\r\n                Password\r\n        </InputLabel>\r\n            <InputField type=\"password\" onChange={(e) => {\r\n                setPass(e.target.value);\r\n            }} />\r\n        </InputCont>\r\n        <InputDisplay display={display}>\r\n            <InputCont>\r\n                <InputLabel>\r\n                    Confirm Password\r\n        </InputLabel>\r\n                <InputField type=\"password\" />\r\n            </InputCont>\r\n        </InputDisplay>\r\n        <Button onClick={() => {\r\n            onFormComplete(email, pass);\r\n        }}>\r\n            {buttonText}\r\n        </Button>\r\n    </Container>\r\n}\r\n\r\nForm.defaultProps = {\r\n    buttonText: \"Button Text\",\r\n    onFormComplete: () => { }\r\n}\r\n\r\nexport default Form;","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Practices\\Practice1\\Form\\Tab\\index.js",["97","98"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    min-width:112px;\r\n    min-height:55px;\r\n    border-radius:5px 5px 0px 0px;\r\n    border-top: 1px solid #000000;\r\n    border-left: 1px solid #000000;\r\n    border-right: 1px solid #000000;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    margin-right:20px;\r\n    user-select:none;\r\n    cursor: pointer;\r\n    ${props => props.bgcolor && \"background-color:\" + props.bgcolor + \";\"};\r\n`;\r\n\r\nconst Tab = ({name, tabText, bgcolor, onTabSelect }) => {\r\n    return <Container onClick={() => {\r\n        onTabSelect(name);\r\n    }} bgcolor={bgcolor}>\r\n        {tabText}\r\n    </Container>\r\n}\r\n\r\nTab.defaultProps = {\r\n    tabText:\"Tab Text\",\r\n    onTabSelect:() => {}\r\n}\r\n\r\nexport default Tab;","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\Practices\\Practice1\\index.js",[],"C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Messages\\index.js",["99","100"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n\r\n`;\r\n\r\nconst MsgCont = styled.div`\r\n\r\n`;\r\n\r\nconst fakedb = [\r\n    {\r\n        id:1,\r\n        username:\"fake\",\r\n        message:\"fake stuff\",\r\n        created:\"Dec. 1st 2021\"\r\n    }\r\n]\r\n\r\nconst Messages = ({msgs}) => {\r\n\r\n    return <Container>\r\n        Messages\r\n        {msgs.map(o=><MsgCont>\r\n            {o.id} - {o.username} - {o.message} - {o.created}\r\n        </MsgCont>)}\r\n    </Container>\r\n}\r\n\r\nMessages.defaultProps = {\r\n    msgs:fakedb\r\n}\r\n\r\nexport default Messages;","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\Practices\\Practice2\\index.js",[],"C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Practices\\Practice2\\Table\\index.js",["101"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    position:relative;\r\n    min-width:300px;\r\n    min-height:auto;\r\n    background:#F7F7F7;\r\n    display:flex;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    position:relative;\r\n    background:#5F83FF;\r\n    color:white;\r\n    font-weight:500;\r\n    min-width:300px;\r\n    min-height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n\r\n    & > span {\r\n        margin-left:10px;\r\n    }\r\n`;\r\n\r\nconst LeftCont = styled.div`\r\n    position:relative;\r\n    width:50%;\r\n    height:250px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:space-evenly;\r\n    text-align:left;\r\n\r\n    & > span {\r\n        margin-left:10px;\r\n    }\r\n`;\r\n\r\nconst RightCont = styled.div`\r\n    position:relative;\r\n    width:50%;\r\n    height:250px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:space-evenly;\r\n    text-align:right;\r\n    color:#777777;\r\n\r\n    & > span {\r\n        margin-right:10px;\r\n    }\r\n`;\r\n\r\nconst Input = styled.input`\r\n    margin:10px 0px;\r\n    max-width:300px;\r\n`;\r\n\r\nconst InputCont = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst data = [\r\n    {\r\n        id: 1,\r\n        name: \"text\",\r\n        reps: \"int\",\r\n        calories: \"int\",\r\n        created: \"timestamp\"\r\n    }\r\n]\r\n\r\nconst Table = ({ list, onInsert }) => {\r\n    const [name, setName] = useState(null);\r\n    const [reps, setReps] = useState(null);\r\n    const [cal, setCal] = useState(null);\r\n\r\n    return <div>\r\n        <Header>\r\n            <span>exercise</span>\r\n        </Header>\r\n        <Container>\r\n            <LeftCont>\r\n                <span>\r\n                    <b>id</b>\r\n                </span>\r\n                <span>\r\n                    name\r\n            </span>\r\n                <span>\r\n                    reps\r\n            </span>\r\n                <span>\r\n                    calories\r\n            </span>\r\n                <span>\r\n                    created\r\n            </span>\r\n            </LeftCont>\r\n            {list.map(o => <RightCont>\r\n                <span>\r\n                    <b>{o.id}</b>\r\n                </span>\r\n                <span>\r\n                    {o.name}\r\n                </span>\r\n                <span>\r\n                    {o.reps}\r\n                </span>\r\n                <span>\r\n                    {o.calories}\r\n                </span>\r\n                <span>\r\n                    {o.created}\r\n                </span>\r\n            </RightCont>)}\r\n        </Container>\r\n        <InputCont>\r\n            <Input type='text' placeholder=\"name\" onChange={(e) => {\r\n                setName(e.target.value);\r\n            }}></Input>\r\n            <Input type='text' placeholder=\"reps\" onChange={(e) => {\r\n                setReps(e.target.value);\r\n            }}></Input>\r\n            <Input type='text' placeholder=\"calories\" onChange={(e) => {\r\n                setCal(e.target.value);\r\n            }}></Input>\r\n        </InputCont>\r\n        <button onClick={() => {\r\n            onInsert(name, reps, cal);\r\n        }}>Insert</button>\r\n    </div>\r\n}\r\n\r\nTable.defaultProps = {\r\n    list: data,\r\n    onInsert: () => { }\r\n}\r\n\r\nexport default Table;","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\arrays\\index.js",["102","103","104","105","106","107","108"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Form from '../../comps/Form';\r\nimport Items from '../../comps/Items';\r\n\r\nimport Pagin from '../../comps/Pagin';\r\n\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nconst ArrayPage = () => {\r\n\r\n    const params = useParams();\r\n    console.log(params.id);\r\n    const [msgs, setMsgs] = useState([]);\r\n    const [allmsgs, setAll] = useState([]);\r\n    const [selectedId, setSelected] = useState(null);\r\n    const itemps_per_page = 3;\r\n\r\n    const GetMessages = async () => {\r\n        var resp = await axios.get(\"https://advdyn2021.herokuapp.com/allmessages\");\r\n        // console.log(\"get message\", resp);\r\n        var arr = resp.data.slice(0, 5);\r\n        setMsgs(arr);\r\n        setAll(resp.data);\r\n    }\r\n\r\n    const ChangePage = (num) => {\r\n        console.log(num);\r\n        setMsgs(\r\n            allmsgs.slice(itemps_per_page * (num - 1), itemps_per_page * num)\r\n        )\r\n    }\r\n\r\n    const FilterPage = (text) => {\r\n        setMsgs(\r\n            allmsgs.filter((o) => {\r\n                return o.username.includes(text);\r\n            })\r\n        )\r\n    }\r\n\r\n    const FilterCheck = (checked) => {\r\n        if (checked) {\r\n            setMsgs(\r\n                allmsgs.filter((o) => {\r\n                    return o.username.length < 5;\r\n                })\r\n            )\r\n        } else {\r\n            setMsgs(\r\n                allmsgs\r\n            )\r\n        }\r\n    }\r\n\r\n    const SortMsgs = () => {\r\n        setMsgs(\r\n            allmsgs.sort(sortByUsername)\r\n        )\r\n    }\r\n\r\n    const SortMsgsDate = () => {\r\n        setMsgs(\r\n            allmsgs.sort(sortByDate)\r\n        )\r\n    }\r\n\r\n    const UpdateMessage = async (username, pass, msg, check1, check2, check3) => {\r\n        console.log(msg);\r\n        if (selectedId === null) {\r\n            return false;\r\n        }\r\n        var resp = await axios.post(\"https://advdyn2021.herokuapp.com/editmessage\", {\r\n            id: selectedId,\r\n            message: msg\r\n        });\r\n        GetMessages();\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetMessages()\r\n    }, []);\r\n    \r\n    return <div>\r\n        <b>Array Page</b>\r\n        {msgs.map(o => {\r\n            // var date = new Date(o.created);\r\n            return <Items onClick={(id) => {\r\n                console.log(id);\r\n                setSelected(id); // Get id from the comp and use it\r\n            }}\r\n                id={o.id}\r\n                message={o.message}\r\n                created={o.created}\r\n                username={o.username}\r\n                highlight={selectedId === o.id}\r\n            />;\r\n        })}\r\n        <Form onFormComplete={UpdateMessage} />\r\n        {/* <input type=\"number\" defaultValue={1} onChange={(e) => {\r\n            ChangePage(e.target.value);\r\n        }} />\r\n        <div>Filter</div>\r\n        <input type=\"text\" onChange={(e) => {\r\n            FilterPage(e.target.value);\r\n        }} />\r\n\r\n        <input type=\"checkbox\" onChange={(e) => {\r\n            FilterCheck(e.target.checked);\r\n        }} />\r\n\r\n        <button onClick={SortMsgs}>Sort by username</button>\r\n        <button onClick={SortMsgs}>Sort messages by date</button>\r\n        <Pagin numpages={Math.ceil(allmsgs.length/3)} onClickPage={ChangePage} /> */}\r\n    </div>\r\n\r\n}\r\n\r\nexport default ArrayPage;\r\n\r\nfunction sortByUsername(a, b) {\r\n    if (a.username > b.username) {\r\n        return 1;\r\n    } else if (a.username < b.username) {\r\n        return -1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nfunction sortByDate(a, b) {\r\n    var adate = new Date(a.created);\r\n    var bdate = new Date(b.created);\r\n\r\n    if (adate > bdate) {\r\n        return 1;\r\n    } else if (adate < bdate) {\r\n        return -1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\n/*\r\nTo Update\r\n1 - pass the id to the component (if you are using a component)\r\n2 - have a handler to capture a interaction that passes the id back out to the page\r\n3 - have a state ready to remember the id to update (useState)\r\n4 - use the state id for your axios call so you can pass the id + other data to the backend\r\n5 - make the axios call and re read everything.\r\n*/\r\n\r\n/*\r\nPAGINATE\r\n\r\narr=arr.slice(0,3); // get the first 3 item on the page\r\n\r\npage1 - item1,2,3 - slice(0,3) - input 1\r\npage2 - item4,5,6 - slice(3,6) - input 2\r\npage3 - item7,8,9 - slice(6,9) - input 3\r\n\r\n3 items per page\r\nslice(items_per_page*0, items_per_page) - page1 - input 1\r\nslice(items_per_page, items_per_page*2) - page2 - input 2\r\nslice(items_per_page*2, items_per_page*3) - page2\r\n\r\n# of pages should be amount of items in the array divided by the number of items per page\r\nEG, 10 items in the array, 2 items per page = 5 page (10/2)\r\n*/\r\n\r\n/*\r\nFILTERS\r\n\r\nCheck for true/false statement\r\nIf the username includes the letter -> return true\r\n\r\n\r\nChecked, filter for all username that is below 5 characters\r\n*/\r\n\r\n/*\r\nSORTING\r\n\r\na.username > b.username 1\r\na.username < b.username -1\r\n== 0\r\n*/","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Pagin\\index.js",["109"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst PageButton = styled.button`\r\n    background-color:${props => props.bgcolor ? props.bgcolor : \"#FAD\"};\r\n`;\r\n\r\nconst Pagin = ({ onClickPage, numpages }) => {\r\n    var pages = [];\r\n    const [pageon, setPageon] = useState(1);\r\n\r\n    const HandleClick = (num) =>{\r\n        onClickPage(num);\r\n        setPageon(num);\r\n    }\r\n\r\n    for (var i = 0; i < numpages; i++) {\r\n        pages.push(\r\n            <PageButton bgcolor={pageon == i+1 ? \"#ADD\" : \"#FAD\"} onClick={HandleClick.bind(this, i+1)}>{i + 1}</PageButton>\r\n        );\r\n    }\r\n    return <div>\r\n        {pages}\r\n    </div>\r\n}\r\n\r\nPagin.defaultProps = {\r\n    onClickPage: () => { },\r\n    numpages: 1\r\n}\r\n\r\nexport default Pagin;\r\n\r\n/*\r\n[1] [2] [3]\r\n*/","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\Practices\\Practice4\\index.js",[],"C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\comps\\Items\\index.js",[],"C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\read_data\\index.js",[],"C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\read_data\\profile.js",["110"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {useParams} from 'react-router-dom';\r\n\r\n// axios https://advdyn2021.herokuapp.com/allusers -> get all users\r\n// axios https://advdyn2021.herokuapp.com/alldiscussions -> get all discussions\r\n// axios https://advdyn2021.herokuapp.com/user_by_id/5 -> get a single user by it's id\r\n\r\nconst Profile = () => {\r\n    const params = useParams();\r\n    console.log(params);\r\n    const [p, setP] = useState([]); // profile\r\n\r\n    const GetData = async () => {\r\n        //var resp3 = axios.get(\"https://advdyn2021.herokuapp.com/user_by_id/5\");\r\n        //setDs([...resp2.data]);\r\n        var resp = await axios.get(\"https://advdyn2021.herokuapp.com/user_by_id/\"+params.id);\r\n        console.log(resp.data);\r\n        setP({...resp.data[0]});\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetData();\r\n    }, []);\r\n\r\n    return <div>\r\n        <h1>Name: {p.name}</h1>\r\n        <h2>Age: {p.age}</h2>\r\n        <h3>Bio: {p.bio}</h3>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\read_data\\edit.js",["111","112","113","114","115","116","117","118"],"C:\\Users\\Mike\\Downloads\\D3\\MDIA3109\\project folder\\review\\src\\pages\\login\\index.js",["119","120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":7,"column":3,"nodeType":"128","messageId":"129","endLine":7,"endColumn":13},{"ruleId":"126","severity":1,"message":"130","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":12},{"ruleId":"126","severity":1,"message":"131","line":10,"column":8,"nodeType":"128","messageId":"129","endLine":10,"endColumn":17},{"ruleId":"126","severity":1,"message":"132","line":11,"column":8,"nodeType":"128","messageId":"129","endLine":11,"endColumn":17},{"ruleId":"126","severity":1,"message":"133","line":13,"column":8,"nodeType":"128","messageId":"129","endLine":13,"endColumn":17},{"ruleId":"126","severity":1,"message":"134","line":34,"column":5,"nodeType":"128","messageId":"129","endLine":34,"endColumn":10},{"ruleId":"126","severity":1,"message":"135","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"136","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"135","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"136","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"135","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"135","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"137","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":13},{"ruleId":"126","severity":1,"message":"138","line":30,"column":11,"nodeType":"128","messageId":"129","endLine":30,"endColumn":21},{"ruleId":"126","severity":1,"message":"139","line":37,"column":11,"nodeType":"128","messageId":"129","endLine":37,"endColumn":21},{"ruleId":"126","severity":1,"message":"140","line":45,"column":11,"nodeType":"128","messageId":"129","endLine":45,"endColumn":22},{"ruleId":"126","severity":1,"message":"141","line":59,"column":11,"nodeType":"128","messageId":"129","endLine":59,"endColumn":19},{"ruleId":"126","severity":1,"message":"142","line":65,"column":11,"nodeType":"128","messageId":"129","endLine":65,"endColumn":23},{"ruleId":"126","severity":1,"message":"143","line":76,"column":13,"nodeType":"128","messageId":"129","endLine":76,"endColumn":17},{"ruleId":"144","severity":1,"message":"145","line":19,"column":41,"nodeType":"146","messageId":"147","endLine":19,"endColumn":43},{"ruleId":"148","severity":1,"message":"149","line":24,"column":8,"nodeType":"150","endLine":24,"endColumn":10,"suggestions":"151"},{"ruleId":"126","severity":1,"message":"152","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":12},{"ruleId":"126","severity":1,"message":"153","line":16,"column":12,"nodeType":"128","messageId":"129","endLine":16,"endColumn":16},{"ruleId":"126","severity":1,"message":"154","line":16,"column":18,"nodeType":"128","messageId":"129","endLine":16,"endColumn":25},{"ruleId":"126","severity":1,"message":"155","line":17,"column":12,"nodeType":"128","messageId":"129","endLine":17,"endColumn":15},{"ruleId":"126","severity":1,"message":"156","line":17,"column":17,"nodeType":"128","messageId":"129","endLine":17,"endColumn":23},{"ruleId":"126","severity":1,"message":"157","line":18,"column":12,"nodeType":"128","messageId":"129","endLine":18,"endColumn":15},{"ruleId":"126","severity":1,"message":"158","line":18,"column":17,"nodeType":"128","messageId":"129","endLine":18,"endColumn":23},{"ruleId":"148","severity":1,"message":"159","line":58,"column":8,"nodeType":"150","endLine":58,"endColumn":10,"suggestions":"160"},{"ruleId":"126","severity":1,"message":"161","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":13},{"ruleId":"126","severity":1,"message":"162","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":14},{"ruleId":"148","severity":1,"message":"159","line":59,"column":8,"nodeType":"150","endLine":59,"endColumn":10,"suggestions":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Main' is defined but never used.","'Practice1' is defined but never used.","'Practice2' is defined but never used.","'Practice4' is defined but never used.","'timer' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Pagin' is defined but never used.","'ChangePage' is assigned a value but never used.","'FilterPage' is assigned a value but never used.","'FilterCheck' is assigned a value but never used.","'SortMsgs' is assigned a value but never used.","'SortMsgsDate' is assigned a value but never used.","'resp' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetData'. Either include it or remove the dependency array.","ArrayExpression",["166"],"'Form' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'age' is assigned a value but never used.","'setAge' is assigned a value but never used.","'bio' is assigned a value but never used.","'setBio' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CheckStorage'. Either include it or remove the dependency array.",["167"],"'Items' is defined but never used.","'Link' is defined but never used.",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"171","fix":"173"},"Update the dependencies array to be: [GetData]",{"range":"174","text":"175"},"Update the dependencies array to be: [CheckStorage]",{"range":"176","text":"177"},{"range":"178","text":"177"},[876,878],"[GetData]",[1950,1952],"[CheckStorage]",[2054,2056]]